from kivy.app import App
from kivy.uix.button import Button
import RPi.GPIO as GPIO

# Configuration du GPIO
LED = 17 # Modifier si nécessaire
GPIO.setmode(GPIO.BOARD)
GPIO.setup(LED, GPIO.OUT)

class LedApp(App):
  def build(self):
    self.led_state = False # État initial de la LED
    self.button = Button(text="Allumer la LED", font_size=24, on_press=self.toggle_led)
    return self.button
  def toggle_led(self, instance):
    self.led_state = not self.led_state
    GPIO.output(LED, self.led_state)
    instance.text = "Éteindre la LED" if self.led_state else "Allumer la LED"

def on_stop(self):
    GPIO.cleanup() # Nettoie les GPIO à la fermeture

if __name__ == "__main__":
 LedApp().run()

def destroy():
    #Turn Off LED
    #GPIO.output(ledPin, GPIO.LOW)
    #Release resource
    GPIO.cleanup()

#If run this script directly, do:
if __name__ == '__main__':
    destroy()
    try:
        ButtonApp().run()
    #When 'Ctrl+C' is pressed, the child program 
    # destroy() will be  executed
    except KeyboardInterrupt:
        destroy()
    finally:
        print("destroy")
        destroy()
