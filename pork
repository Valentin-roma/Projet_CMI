<!-- Ajoutez ceci dans la vue liste des machines (remplacez l'ancien tableau) -->
<table class="table table-striped">
    <thead>
        <tr>
            <th>Marque</th>
            <th>Modèle</th>
            <th>Quantité</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="machines-table-body">
        <!-- Le contenu sera généré dynamiquement -->
    </tbody>
</table>

<!-- Ajoutez ce modal pour l'édition -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modifier la quantité</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="number" class="form-control" id="edit-quantity" min="1">
                <input type="hidden" id="edit-index">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" onclick="saveEdit()">Enregistrer</button>
            </div>
        </div>
    </div>
</div>

<!-- Ajoutez ce modal pour le scan -->
<div class="modal fade" id="scanModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Fiche Produit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="scan-modal-body">
                <!-- Contenu généré dynamiquement -->
            </div>
        </div>
    </div>
</div>



// Corrigez la fonction addMachine (problème du bouton)
function addMachine(e) {
    e.preventDefault();
    
    const marque = document.getElementById('marque').value.trim();
    const model = document.getElementById('model').value.trim();
    const quantite = parseInt(document.getElementById('quantite').value);
    const etatcvi = document.getElementById('etatcvi').value;
    const dateFinCVI = etatcvi === 'oui' ? document.getElementById('date-fin-cvi').value : null;

    if (!marque || !model || isNaN(quantite)) {
        showAlert('Veuillez remplir tous les champs obligatoires', 'danger');
        return;
    }

    // ... (le reste de la fonction existante)
}

// Ajoutez ces nouvelles fonctions
function editQuantity(index) {
    const machine = machines[index];
    document.getElementById('edit-quantity').value = machine.quantite;
    document.getElementById('edit-index').value = index;
    new bootstrap.Modal(document.getElementById('editModal')).show();
}

function saveEdit() {
    const index = document.getElementById('edit-index').value;
    const newQuantity = parseInt(document.getElementById('edit-quantity').value);
    
    if (!isNaN(newQuantity) && newQuantity > 0) {
        machines[index].quantite = newQuantity;
        saveMachines();
        updateInventory();
        new bootstrap.Modal(document.getElementById('editModal')).hide();
        showAlert('Quantité mise à jour', 'success');
    } else {
        showAlert('Veuillez entrer une quantité valide', 'danger');
    }
}

function deleteMachine(index) {
    if (confirm('Êtes-vous sûr de vouloir supprimer cet appareil ?')) {
        machines.splice(index, 1);
        saveMachines();
        updateCVIList();
        showAlert('Appareil supprimé', 'success');
    }
}

function showProductDetails(machine, index) {
    const modalBody = document.getElementById('scan-modal-body');
    modalBody.innerHTML = `
        <p><strong>Marque:</strong> ${machine.marque}</p>
        <p><strong>Modèle:</strong> ${machine.model}</p>
        <div class="input-group mb-3">
            <input type="number" class="form-control" id="scan-quantity" value="${machine.quantite}" min="1">
            <button class="btn btn-primary" onclick="updateScannedProduct(${index})">Mettre à jour</button>
        </div>
        <button class="btn btn-danger" onclick="deleteMachine(${index})">Supprimer</button>
    `;
    new bootstrap.Modal(document.getElementById('scanModal')).show();
}

function updateScannedProduct(index) {
    const newQuantity = parseInt(document.getElementById('scan-quantity').value);
    if (!isNaN(newQuantity) && newQuantity > 0) {
        machines[index].quantite = newQuantity;
        saveMachines();
        updateInventory();
        showAlert('Quantité mise à jour', 'success');
    } else {
        showAlert('Veuillez entrer une quantité valide', 'danger');
    }
}

// Modifiez la fonction updateInventory pour ajouter les boutons
function updateInventory() {
    const tbody = document.getElementById('machines-table-body');
    tbody.innerHTML = '';
    
    machines.forEach((machine, index) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td>${machine.marque}</td>
            <td>${machine.model}</td>
            <td>${machine.quantite}</td>
            <td>
                <button class="btn btn-sm btn-primary" onclick="editQuantity(${index})">
                    Modifier
                </button>
            </td>
        `;
        tbody.appendChild(tr);
    });
}

// Modifiez la fonction updateCVIList pour ajouter le bouton supprimer
function updateCVIList() {
    const tbody = document.getElementById('cvi-table-body');
    tbody.innerHTML = '';
    
    machines.forEach((machine, index) => {
        if (machine.etatcvi === 'oui') {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${machine.marque}</td>
                <td>${machine.model}</td>
                <td>Oui</td>
                <td>${machine.dateFinCVI || 'Non spécifiée'}</td>
                <td>
                    <button class="btn btn-sm btn-danger" onclick="deleteMachine(${index})">
                        Supprimer
                    </button>
                </td>
            `;
            tbody.appendChild(tr);
        }
    });
}










px;
            }
            #reader {
                min-height: 250px;
            }
        }
        .hidden {
            display: none;
        }
        .alert {
            transition: opacity 0.5s ease-out;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="#" onclick="showView('home')">Gestion Machines</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('add-machine')">Ajouter</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('list-machines')">Liste</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('cvi')">CVI</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div id="alert-placeholder"></div>

        <!-- Vue Accueil -->
        <div id="home-view" class="view">
            <h2>Gestionnaire de machines</h2>
            <div class="d-grid gap-2">
                <button class="btn btn-primary" onclick="showView('add-machine')">Ajouter une machine</button>
                <button class="btn btn-secondary" onclick="showView('list-machines')">Voir l'inventaire</button>
            </div>
        </div>

        <!-- Vue Ajout Machine -->
        <div id="add-machine-view" class="view hidden">
            <h2>Ajouter une machine</h2>
            <form id="add-machine-form">
                <div class="mb-3">
                    <label for="marque" class="form-label">Marque</label>
                    <input type="text" class="form-control" id="marque" required>
                </div>
                <div class="mb-3">
                    <label for="model" class="form-label">Modèle</label>
                    <input type="text" class="form-control" id="model" required>
                </div>
                <div class="mb-3">
                    <label for="quantite" class="form-label">Quantité</label>
                    <input type="number" class="form-control" id="quantite" min="1" value="1" required>
                </div>
                <div class="mb-3">
                    <label for="etatcvi" class="form-label">CVI disponible</label>
                    <select class="form-select" id="etatcvi">
                        <option value="oui">Oui</option>
                        <option value="non">Non</option>
                    </select>
                </div>
                <div class="mb-3" id="date-cvi-container" style="display:none;">
                    <label for="date-fin-cvi" class="form-label">Date de fin CVI</label>
                    <input type="date" class="form-control" id="date-fin-cvi">
                </div>
                <button type="submit" class="btn btn-primary">Ajouter</button>
            </form>
        </div>

        <!-- Vue Liste Machines -->
        <div id="list-machines-view" class="view hidden">
            <h2>Inventaire des Machines</h2>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Marque</th>
                            <th>Modèle</th>
                            <th>Quantité</th>
                        </tr>
                    </thead>
                    <tbody id="machines-table-body">
                        <!-- Les machines seront ajoutées dynamiquement ici -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Vue CVI -->
        <div id="cvi-view" class="view hidden">
            <h2>Gestion des CVI</h2>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Marque</th>
                            <th>Modèle</th>
                            <th>CVI</th>
                            <th>Date fin CVI</th>
                        </tr>
                    </thead>
                    <tbody id="cvi-table-body">
                        <!-- Les machines avec CVI seront ajoutées dynamiquement ici -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        // Variables globales
        let machines = JSON.parse(localStorage.getItem('machines')) || [];
        
        // Au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser les événements
            document.getElementById('add-machine-form').addEventListener('submit', addMachine);
            document.getElementById('etatcvi').addEventListener('change', function() {
                document.getElementById('date-cvi-container').style.display = 
                    this.value === 'oui' ? 'block' : 'none';
            });
            
            // Démarrer sur la vue d'accueil
            showView('home');
            updateInventory();
            updateCVIList();
        });
        
        // Gestion des vues
        function showView(viewName) {
            // Cacher toutes les vues
            document.querySelectorAll('.view').forEach(view => {
                view.classList.add('hidden');
            });
            
            // Afficher la vue demandée
            document.getElementById(`${viewName}-view`).classList.remove('hidden');
            
            // Mettre à jour les données si nécessaire
            if (viewName === 'list-machines') {
                updateInventory();
            } else if (viewName === 'cvi') {
                updateCVIList();
            }
        }
        
        // Ajouter une machine
        function addMachine(e) {
            e.preventDefault();
            
            const marque = document.getElementById('marque').value.trim();
            const model = document.getElementById('model').value.trim();
            const quantite = parseInt(document.getElementById('quantite').value);
            const etatcvi = document.getElementById('etatcvi').value;
            const dateFinCVI = etatcvi === 'oui' ? document.getElementById('date-fin-cvi').value : null;
            
            // Vérifier si le modèle existe déjà
            const existingMachineIndex = machines.findIndex(m => 
                m.marque.toLowerCase() === marque.toLowerCase() && 
                m.model.toLowerCase() === model.toLowerCase()
            );
            
            if (existingMachineIndex !== -1) {
                // Mettre à jour la quantité
                machines[existingMachineIndex].quantite += quantite;
                
                // Mettre à jour le CVI si nécessaire
                if (etatcvi === 'oui') {
                    machines[existingMachineIndex].etatcvi = 'oui';
                    machines[existingMachineIndex].dateFinCVI = dateFinCVI;
                }
                
                showAlert('Quantité mise à jour pour ce modèle', 'success');
            } else {
                // Créer une nouvelle machine
                const machine = {
                    marque,
                    model,
                    quantite,
                    etatcvi,
                    dateFinCVI,
                    createdAt: new Date().toISOString()
                };
                
                machines.push(machine);
                showAlert('Nouveau modèle ajouté', 'success');
            }
            
            // Sauvegarder et réinitialiser
            saveMachines();
            document.getElementById('add-machine-form').reset();
            document.getElementById('date-cvi-container').style.display = 'none';
            
            // Mettre à jour les vues
            updateInventory();
            updateCVIList();
        }
        
        // Mettre à jour l'inventaire
        function updateInventory() {
            const tbody = document.getElementById('machines-table-body');
            tbody.innerHTML = '';
            
            if (machines.length === 0) {
                tbody.innerHTML = '<tr><td colspan="3" class="text-center">Aucune machine enregistrée</td></tr>';
                return;
            }
            
            // Grouper par marque et modèle
            const inventory = {};
            machines.forEach(machine => {
                const key = `${machine.marque}_${machine.model}`.toLowerCase();
                if (!inventory[key]) {
                    inventory[key] = {
                        marque: machine.marque,
                        model: machine.model,
                        quantite: 0
                    };
                }
                inventory[key].quantite += machine.quantite;
            });
            
            // Afficher le résultat
            Object.values(inventory).forEach(item => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${item.marque}</td>
                    <td>${item.model}</td>
                    <td>${item.quantite}</td>
                `;
                tbody.appendChild(tr);
            });
        }
        
        // Mettre à jour la liste CVI
        function updateCVIList() {
            const tbody = document.getElementById('cvi-table-body');
            tbody.innerHTML = '';
            
            const machinesWithCVI = machines.filter(m => m.etatcvi === 'oui');
            
            if (machinesWithCVI.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4" class="text-center">Aucune machine avec CVI</td></tr>';
                return;
            }
            
            machinesWithCVI.forEach(machine => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${machine.marque}</td>
                    <td>${machine.model}</td>
                    <td>${machine.etatcvi === 'oui' ? 'Oui' : 'Non'}</td>
                    <td>${machine.dateFinCVI || 'Non spécifiée'}</td>
                `;
                tbody.appendChild(tr);
            });
        }
        
        // Sauvegarder les machines
        function saveMachines() {
            localStorage.setItem('machines', JSON.stringify(machines));
        }
        
        // Afficher une alerte
        function showAlert(message, type) {
            const alertPlaceholder = document.getElementById('alert-placeholder');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            alertPlaceholder.appendChild(alert);
            
            // Supprimer l'alerte après 5 secondes
            setTimeout(() => {
                alert.remove();
            }, 5000);
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>