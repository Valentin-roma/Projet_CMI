<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Machines</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js"></script>
    <script src="https://unpkg.com/html5-qrcode"></script>
    <style>
        body {
            padding-bottom: 50px;
        }
        .card {
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .table-responsive {
            margin-top: 20px;
        }
        #reader {
            min-height: 300px;
            border: 2px dashed #ccc;
            margin-bottom: 15px;
        }
        .qr-code-img {
            max-width: 200px;
            height: auto;
        }
        .hidden {
            display: none;
        }
        .alert {
            transition: opacity 0.5s ease-out;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="#" onclick="showView('home')">Gestion Machines</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('add-machine')">Ajouter</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('list-machines')">Liste</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('scan')">Scanner</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('cvi')">CVI</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div id="alert-placeholder"></div>

        <!-- Vue Accueil -->
        <div id="home-view" class="view">
            <h2>Gestionnaire de machines</h2>
            <div class="d-grid gap-2">
                <button class="btn btn-primary" onclick="showView('add-machine')">Ajouter une machine</button>
                <button class="btn btn-secondary" onclick="showView('list-machines')">Voir l'inventaire</button>
                <button class="btn btn-info" onclick="showView('scan')">Scanner un produit</button>
            </div>
        </div>

        <!-- Vue Ajout Machine -->
        <div id="add-machine-view" class="view hidden">
            <h2>Ajouter une machine</h2>
            <form id="add-machine-form">
                <div class="mb-3">
                    <label for="marque" class="form-label">Marque*</label>
                    <input type="text" class="form-control" id="marque" required>
                </div>
                <div class="mb-3">
                    <label for="model" class="form-label">Modèle*</label>
                    <input type="text" class="form-control" id="model" required>
                </div>
                <div class="mb-3">
                    <label for="quantite" class="form-label">Quantité*</label>
                    <input type="number" class="form-control" id="quantite" min="1" value="1" required>
                </div>
                <div class="mb-3">
                    <label for="etatcvi" class="form-label">CVI disponible</label>
                    <select class="form-select" id="etatcvi">
                        <option value="non">Non</option>
                        <option value="oui">Oui</option>
                    </select>
                </div>
                <div class="mb-3" id="date-cvi-container" style="display:none;">
                    <label for="date-fin-cvi" class="form-label">Date de fin CVI*</label>
                    <input type="date" class="form-control" id="date-fin-cvi">
                </div>
                <button type="submit" class="btn btn-primary">Enregistrer</button>
                <button type="button" class="btn btn-secondary" onclick="showView('home')">Annuler</button>
            </form>
        </div>

        <!-- Vue Liste Machines -->
        <div id="list-machines-view" class="view hidden">
            <h2>Inventaire des Machines</h2>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Marque</th>
                            <th>Modèle</th>
                            <th>Quantité</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="machines-table-body">
                        <!-- Rempli dynamiquement -->
                    </tbody>
                </table>
            </div>
            <button class="btn btn-secondary" onclick="showView('home')">Retour</button>
        </div>

        <!-- Vue Scan -->
        <div id="scan-view" class="view hidden">
            <h2>Scanner un produit</h2>
            <div class="card">
                <div class="card-body">
                    <div id="reader"></div>
                    <div class="text-center mt-3">
                        <button id="start-scan" class="btn btn-primary">Démarrer le scan</button>
                        <button id="stop-scan" class="btn btn-danger" disabled>Arrêter</button>
                    </div>
                </div>
            </div>
            <div class="card mt-3">
                <div class="card-body">
                    <h5>Recherche manuelle</h5>
                    <div class="input-group">
                        <input type="text" class="form-control" id="manual-search" placeholder="Marque ou modèle">
                        <button class="btn btn-primary" type="button" onclick="manualSearch()">Rechercher</button>
                    </div>
                </div>
            </div>
            <button class="btn btn-secondary mt-3" onclick="showView('home')">Retour</button>
        </div>

        <!-- Vue CVI -->
        <div id="cvi-view" class="view hidden">
            <h2>Gestion des CVI</h2>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Marque</th>
                            <th>Modèle</th>
                            <th>Date fin CVI</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="cvi-table-body">
                        <!-- Rempli dynamiquement -->
                    </tbody>
                </table>
            </div>
            <button class="btn btn-secondary" onclick="showView('home')">Retour</button>
        </div>
    </div>

    <!-- Modal Produit -->
    <div class="modal fade" id="productModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Fiche Produit</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="product-modal-body">
                    <!-- Rempli dynamiquement -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Variables globales
        let machines = JSON.parse(localStorage.getItem('machines')) || [];
        let html5QrcodeScanner = null;
        let currentScanIndex = null;

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            // Événements
            document.getElementById('add-machine-form').addEventListener('submit', addMachine);
            document.getElementById('etatcvi').addEventListener('change', toggleCVIDate);
            document.getElementById('start-scan').addEventListener('click', startScanner);
            document.getElementById('stop-scan').addEventListener('click', stopScanner);
            
            showView('home');
        });

        // Gestion des vues
        function showView(viewName) {
            document.querySelectorAll('.view').forEach(view => {
                view.classList.add('hidden');
            });
            document.getElementById(`${viewName}-view`).classList.remove('hidden');
            
            if (viewName === 'list-machines') updateInventory();
            if (viewName === 'cvi') updateCVIList();
            if (viewName === 'scan') stopScanner();
        }

        // Ajout machine
        function addMachine(e) {
            e.preventDefault();
            
            const marque = document.getElementById('marque').value.trim();
            const model = document.getElementById('model').value.trim();
            const quantite = parseInt(document.getElementById('quantite').value);
            const etatcvi = document.getElementById('etatcvi').value;
            const dateFinCVI = etatcvi === 'oui' ? document.getElementById('date-fin-cvi').value : null;

            if (!marque || !model || isNaN(quantite) || (etatcvi === 'oui' && !dateFinCVI)) {
                showAlert('Veuillez remplir tous les champs obligatoires', 'danger');
                return;
            }

            // Vérifier si le modèle existe déjà
            const existingIndex = machines.findIndex(m => 
                m.marque.toLowerCase() === marque.toLowerCase() && 
                m.model.toLowerCase() === model.toLowerCase()
            );

            if (existingIndex !== -1) {
                // Mise à jour de la quantité
                machines[existingIndex].quantite += quantite;
                // Mise à jour CVI si nécessaire
                if (etatcvi === 'oui') {
                    machines[existingIndex].etatcvi = 'oui';
                    machines[existingIndex].dateFinCVI = dateFinCVI;
                }
                showAlert('Quantité mise à jour pour ce modèle', 'success');
            } else {
                // Nouvelle machine
                machines.push({
                    marque,
                    model,
                    quantite,
                    etatcvi,
                    dateFinCVI,
                    createdAt: new Date().toISOString()
                });
                showAlert('Nouveau modèle ajouté', 'success');
            }

            saveMachines();
            document.getElementById('add-machine-form').reset();
            showView('list-machines');
        }

        // Mise à jour inventaire
        function updateInventory() {
            const tbody = document.getElementById('machines-table-body');
            tbody.innerHTML = '';

            if (machines.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4" class="text-center">Aucune machine enregistrée</td></tr>';
                return;
            }

            machines.forEach((machine, index) => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${machine.marque}</td>
                    <td>${machine.model}</td>
                    <td>${machine.quantite}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" onclick="showProductModal(${index})">
                            Modifier
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }

        // Mise à jour liste CVI
        function updateCVIList() {
            const tbody = document.getElementById('cvi-table-body');
            tbody.innerHTML = '';

            const machinesCVI = machines.filter(m => m.etatcvi === 'oui');
            
            if (machinesCVI.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4" class="text-center">Aucune machine avec CVI</td></tr>';
                return;
            }

            machinesCVI.forEach((machine, index) => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${machine.marque}</td>
                    <td>${machine.model}</td>
                    <td>${machine.dateFinCVI || 'Non spécifiée'}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" onclick="showProductModal(${index})">
                            Modifier
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="deleteMachine(${index})">
                            Supprimer
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }

        // Modal produit
        function showProductModal(index) {
            const machine = machines[index];
            currentScanIndex = index;
            
            const modalBody = document.getElementById('product-modal-body');
            modalBody.innerHTML = `
                <div class="mb-3">
                    <label class="form-label">Marque</label>
                    <input type="text" class="form-control" value="${machine.marque}" readonly>
                </div>
                <div class="mb-3">
                    <label class="form-label">Modèle</label>
                    <input type="text" class="form-control" value="${machine.model}" readonly>
                </div>
                <div class="mb-3">
                    <label class="form-label">Quantité</label>
                    <input type="number" class="form-control" id="modal-quantity" value="${machine.quantite}" min="1">
                </div>
                <div class="mb-3">
                    <label class="form-label">CVI</label>
                    <select class="form-select" id="modal-cvi">
                        <option value="non" ${machine.etatcvi === 'non' ? 'selected' : ''}>Non</option>
                        <option value="oui" ${machine.etatcvi === 'oui' ? 'selected' : ''}>Oui</option>
                    </select>
                </div>
                <div class="mb-3" id="modal-cvi-date-container" style="${machine.etatcvi === 'oui' ? '' : 'display:none;'}">
                    <label class="form-label">Date fin CVI</label>
                    <input type="date" class="form-control" id="modal-cvi-date" value="${machine.dateFinCVI || ''}">
                </div>
                <div class="d-flex justify-content-between">
                    <button class="btn btn-primary" onclick="updateProduct()">Enregistrer</button>
                    <button class="btn btn-danger" onclick="deleteMachine(${index})">Supprimer</button>
                </div>
            `;

            document.getElementById('modal-cvi').addEventListener('change', function() {
                document.getElementById('modal-cvi-date-container').style.display = 
                    this.value === 'oui' ? 'block' : 'none';
            });

            new bootstrap.Modal(document.getElementById('productModal')).show();
        }

        // Mise à jour produit
        function updateProduct() {
            const index = currentScanIndex;
            const newQuantity = parseInt(document.getElementById('modal-quantity').value);
            const etatcvi = document.getElementById('modal-cvi').value;
            const dateFinCVI = etatcvi === 'oui' ? document.getElementById('modal-cvi-date').value : null;

            if (isNaN(newQuantity) || newQuantity < 1) {
                showAlert('Quantité invalide', 'danger');
                return;
            }

            machines[index].quantite = newQuantity;
            machines[index].etatcvi = etatcvi;
            machines[index].dateFinCVI = dateFinCVI;

            saveMachines();
            updateInventory();
            updateCVIList();
            showAlert('Produit mis à jour', 'success');
            bootstrap.Modal.getInstance(document.getElementById('productModal')).hide();
        }

        // Suppression machine
        function deleteMachine(index) {
            if (confirm('Êtes-vous sûr de vouloir supprimer cette machine ?')) {
                machines.splice(index, 1);
                saveMachines();
                updateInventory();
                updateCVIList();
                showAlert('Machine supprimée', 'success');
                bootstrap.Modal.getInstance(document.getElementById('productModal')).hide();
            }
        }

        // Scanner
        function startScanner() {
            document.getElementById('start-scan').disabled = true;
            document.getElementById('stop-scan').disabled = false;

            html5QrcodeScanner = new Html5QrcodeScanner(
                "reader", 
                { fps: 10, qrbox: 250 }, 
                false
            );

            html5QrcodeScanner.render(onScanSuccess);
        }

        function stopScanner() {
            document.getElementById('start-scan').disabled = false;
            document.getElementById('stop-scan').disabled = true;
            
            if (html5QrcodeScanner) {
                html5QrcodeScanner.clear().catch(error => {
                    console.error("Erreur arrêt scanner:", error);
                });
            }
        }

        function onScanSuccess(decodedText) {
            stopScanner();
            const foundIndex = machines.findIndex(m => 
                m.marque.toLowerCase().includes(decodedText.toLowerCase()) || 
                m.model.toLowerCase().includes(decodedText.toLowerCase())
            );
            
            if (foundIndex !== -1) {
                showProductModal(foundIndex);
            } else {
                showAlert('Produit non trouvé', 'danger');
            }
        }

        function manualSearch() {
            const query = document.getElementById('manual-search').value.trim().toLowerCase();
            if (!query) return;

            const foundIndex = machines.findIndex(m => 
                m.marque.toLowerCase().includes(query) || 
                m.model.toLowerCase().includes(query)
            );

            if (foundIndex !== -1) {
                showProductModal(foundIndex);
            } else {
                showAlert('Aucun produit trouvé', 'danger');
            }
        }

        // Helpers
        function toggleCVIDate() {
            document.getElementById('date-cvi-container').style.display = 
                document.getElementById('etatcvi').value === 'oui' ? 'block' : 'none';
        }

        function saveMachines() {
            localStorage.setItem('machines', JSON.stringify(machines));
        }

        function showAlert(message, type) {
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.getElementById('alert-placeholder').appendChild(alert);
            
            setTimeout(() => {
                alert.remove();
            }, 5000);
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>