<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion des Machines</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js"></script>
    <script src="https://unpkg.com/html5-qrcode"></script>
    <style>
        body {
            padding-bottom: 50px;
        }
        .card {
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .table-responsive {
            margin-top: 20px;
        }
        #reader {
            min-height: 300px;
            border: 2px dashed #ccc;
            margin-bottom: 15px;
        }
        .qr-code-img {
            max-width: 200px;
            height: auto;
        }
        @media (max-width: 768px) {
            .navbar-nav {
                margin-top: 10px;
            }
            #reader {
                min-height: 250px;
            }
        }
        .hidden {
            display: none;
        }
        .alert {
            transition: opacity 0.5s ease-out;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="#" onclick="showView('home')">Gestion Machines</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('add-machine')">Ajouter</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('list-machines')">Liste</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="showView('scan')">Scanner</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div id="alert-placeholder"></div>

        <!-- Vue Accueil -->
        <div id="home-view" class="view">
            <h2>Bienvenue dans le gestionnaire de machines</h2>
            <p>Cette application vous permet de :</p>
            <ul>
                <li>Ajouter des machines avec génération de QR code</li>
                <li>Scanner les QR codes pour retrouver une machine</li>
                <li>Modifier l'état des machines</li>
                <li>Filtrer et rechercher les machines</li>
            </ul>
            <div class="d-grid gap-2">
                <button class="btn btn-primary" onclick="showView('add-machine')">Ajouter une machine</button>
                <button class="btn btn-secondary" onclick="showView('list-machines')">Voir toutes les machines</button>
            </div>
        </div>

        <!-- Vue Ajout Machine -->
        <div id="add-machine-view" class="view hidden">
            <h2>Ajouter une machine</h2>
            <form id="add-machine-form">
                <div class="mb-3">
                    <label for="serial_number" class="form-label">Numéro de série</label>
                    <input type="text" class="form-control" id="serial_number" required>
                </div>
                <div class="mb-3">
                    <label for="model" class="form-label">Modèle</label>
                    <input type="text" class="form-control" id="model" required>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea class="form-control" id="description" rows="3"></textarea>
                </div>
                <div class="mb-3">
                    <label for="status" class="form-label">État</label>
                    <select class="form-select" id="status" required>
                        <option value="en stock">en stock</option>
                        <option value="reconditionné">reconditionné</option>
                        <option value="en livraison">en livraison</option>
                        <option value="livré">livré</option>
                        <option value="en réparation">en réparation</option>
                        <option value="hors service">hors service</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Ajouter</button>
            </form>
        </div>

        <!-- Vue Liste Machines -->
        <div id="list-machines-view" class="view hidden">
            <h2>Liste des Machines</h2>
            
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="input-group">
                        <select class="form-select" id="status-filter" onchange="filterMachines()">
                            <option value="all">Tous les états</option>
                            <option value="en stock">en stock</option>
                            <option value="reconditionné">reconditionné</option>
                            <option value="en livraison">en livraison</option>
                            <option value="livré">livré</option>
                            <option value="en réparation">en réparation</option>
                            <option value="hors service">hors service</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" id="search-query" placeholder="Rechercher...">
                        <button class="btn btn-outline-secondary" type="button" onclick="filterMachines()">Rechercher</button>
                    </div>
                </div>
            </div>
            
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Numéro de série</th>
                            <th>Modèle</th>
                            <th>État</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="machines-table-body">
                        <!-- Les machines seront ajoutées ici par JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Vue Machine -->
        <div id="machine-view" class="view hidden">
            <div class="row">
                <div class="col-md-6">
                    <h2 id="machine-title">Machine</h2>
                    <div class="card">
                        <div class="card-body">
                            <p><strong>Numéro de série:</strong> <span id="view-serial-number"></span></p>
                            <p><strong>Modèle:</strong> <span id="view-model"></span></p>
                            <p><strong>Description:</strong> <span id="view-description"></span></p>
                            
                            <div class="mb-3">
                                <label for="update-status" class="form-label"><strong>État:</strong></label>
                                <div class="input-group">
                                    <select class="form-select" id="update-status">
                                        <option value="en stock">en stock</option>
                                        <option value="reconditionné">reconditionné</option>
                                        <option value="en livraison">en livraison</option>
                                        <option value="livré">livré</option>
                                        <option value="en réparation">en réparation</option>
                                        <option value="hors service">hors service</option>
                                    </select>
                                    <button class="btn btn-primary" type="button" onclick="updateMachineStatus()">Mettre à jour</button>
                                </div>
                            </div>
                            
                            <button class="btn btn-secondary" onclick="showView('list-machines')">Retour à la liste</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 text-center">
                    <h3>QR Code</h3>
                    <div id="qr-code-container"></div>
                    <div class="mt-3">
                        <button class="btn btn-outline-primary" onclick="downloadQRCode()">Télécharger QR Code</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vue Scan -->
        <div id="scan-view" class="view hidden">
            <h2>Scanner un QR Code</h2>
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <div id="reader"></div>
                            <div class="text-center mt-3">
                                <button id="start-scan" class="btn btn-primary">Démarrer le scan</button>
                                <button id="stop-scan" class="btn btn-danger" disabled>Arrêter le scan</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Ou entrer manuellement</h5>
                            <div class="input-group">
                                <input type="text" class="form-control" id="manual-serial-number" placeholder="Numéro de série">
                                <button class="btn btn-primary" type="button" onclick="findMachineBySerial()">Rechercher</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Variables globales
        let currentMachine = null;
        let html5QrcodeScanner = null;
        
        // Statuts disponibles
        const statusChoices = [
            'en stock',
            'reconditionné',
            'en livraison',
            'livré',
            'en réparation',
            'hors service'
        ];
        
        // Au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser les événements
            document.getElementById('add-machine-form').addEventListener('submit', addMachine);
            document.getElementById('search-query').addEventListener('keyup', function(e) {
                if (e.key === 'Enter') filterMachines();
            });
            document.getElementById('manual-serial-number').addEventListener('keyup', function(e) {
                if (e.key === 'Enter') findMachineBySerial();
            });
            
            // Démarrer sur la vue d'accueil
            showView('home');
            
            // Si des machines existent en localStorage, les charger
            if (!localStorage.getItem('machines')) {
                localStorage.setItem('machines', JSON.stringify([]));
            }
            
            // Configurer le scanner
            setupScanner();
        });
        
        // Gestion des vues
        function showView(viewName) {
            // Cacher toutes les vues
            document.querySelectorAll('.view').forEach(view => {
                view.classList.add('hidden');
            });
            
            // Afficher la vue demandée
            document.getElementById(`${viewName}-view`).classList.remove('hidden');
            
            // Initialiser la vue si nécessaire
            if (viewName === 'list-machines') {
                filterMachines();
            }
        }
        
        // Ajouter une machine
        function addMachine(e) {
            e.preventDefault();
            
            const serialNumber = document.getElementById('serial_number').value;
            const model = document.getElementById('model').value;
            const description = document.getElementById('description').value;
            const status = document.getElementById('status').value;
            
            // Vérifier si le numéro de série existe déjà
            const machines = getMachines();
            if (machines.some(m => m.serialNumber === serialNumber)) {
                showAlert('Ce numéro de série existe déjà', 'danger');
                return;
            }
            
            // Créer la machine
            const machine = {
                serialNumber,
                model,
                description,
                status,
                createdAt: new Date().toISOString()
            };
            
            // Ajouter à la liste
            machines.push(machine);
            saveMachines(machines);
            
            // Réinitialiser le formulaire
            document.getElementById('add-machine-form').reset();
            
            // Afficher un message de succès
            showAlert('Machine ajoutée avec succès', 'success');
            
            // Afficher la machine
            showMachineView(machine);
        }
        
        // Filtrer les machines
        function filterMachines() {
            const statusFilter = document.getElementById('status-filter').value;
            const searchQuery = document.getElementById('search-query').value.toLowerCase();
            
            const machines = getMachines();
            let filteredMachines = machines;
            
            // Filtrer par statut
            if (statusFilter !== 'all') {
                filteredMachines = filteredMachines.filter(m => m.status === statusFilter);
            }
            
            // Filtrer par recherche
            if (searchQuery) {
                filteredMachines = filteredMachines.filter(m => 
                    m.serialNumber.toLowerCase().includes(searchQuery) || 
                    m.model.toLowerCase().includes(searchQuery)
                );
            }
            
            // Trier par date de création (les plus récentes en premier)
            filteredMachines.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
            
            // Afficher les résultats
            displayMachines(filteredMachines);
        }
        
        // Afficher la liste des machines
        function displayMachines(machines) {
            const tbody = document.getElementById('machines-table-body');
            tbody.innerHTML = '';
            
            if (machines.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4" class="text-center">Aucune machine trouvée</td></tr>';
                return;
            }
            
            machines.forEach(machine => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${machine.serialNumber}</td>
                    <td>${machine.model}</td>
                    <td>${machine.status}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" onclick="showMachineView(${JSON.stringify(machine).replace(/"/g, '&quot;')})">Voir</button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }
        
        // Afficher la vue d'une machine
        function showMachineView(machine) {
            currentMachine = machine;
            
            // Mettre à jour les informations
            document.getElementById('machine-title').textContent = `Machine ${machine.serialNumber}`;
            document.getElementById('view-serial-number').textContent = machine.serialNumber;
            document.getElementById('view-model').textContent = machine.model;
            document.getElementById('view-description').textContent = machine.description || 'N/A';
            document.getElementById('update-status').value = machine.status;
            
            // Générer le QR code
            generateQRCode(machine.serialNumber);
            
            // Afficher la vue
            showView('machine');
        }
        
        // Mettre à jour le statut d'une machine
        function updateMachineStatus() {
            const newStatus = document.getElementById('update-status').value;
            
            const machines = getMachines();
            const machineIndex = machines.findIndex(m => m.serialNumber === currentMachine.serialNumber);
            
            if (machineIndex !== -1) {
                machines[machineIndex].status = newStatus;
                saveMachines(machines);
                currentMachine.status = newStatus;
                showAlert('Statut mis à jour avec succès', 'success');
            }
        }
        
        // Générer un QR code
        function generateQRCode(serialNumber) {
            const qr = qrcode(0, 'L');
            qr.addData(serialNumber);
            qr.make();
            
            const container = document.getElementById('qr-code-container');
            container.innerHTML = qr.createImgTag(6);
            
            // Stocker le QR code dans la machine courante pour le téléchargement
            const img = container.querySelector('img');
            img.classList.add('img-fluid', 'qr-code-img');
            currentMachine.qrCodeImg = img.outerHTML;
        }
        
        // Télécharger le QR code
        function downloadQRCode() {
            if (!currentMachine || !currentMachine.qrCodeImg) return;
            
            const blob = new Blob([currentMachine.qrCodeImg], { type: 'image/svg+xml' });
            const url = URL.createObjectURL(blob);
            
            const a = document.createElement('a');
            a.href = url;
            a.download = `qr-code-${currentMachine.serialNumber}.svg`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }
        
        // Scanner de QR code
        function setupScanner() {
            document.getElementById('start-scan').addEventListener('click', function() {
                this.disabled = true;
                document.getElementById('stop-scan').disabled = false;
                
                html5QrcodeScanner = new Html5QrcodeScanner(
                    "reader", 
                    { fps: 10, qrbox: 250 }, 
                    false);
                
                html5QrcodeScanner.render(onScanSuccess);
            });
            
            document.getElementById('stop-scan').addEventListener('click', function() {
                this.disabled = true;
                document.getElementById('start-scan').disabled = false;
                if (html5QrcodeScanner) {
                    html5QrcodeScanner.clear().catch(error => {
                        console.error("Failed to clear html5QrcodeScanner. ", error);
                    });
                }
            });
        }
        
        // Callback de scan réussi
        function onScanSuccess(decodedText) {
            // Arrêter le scanner
            if (html5QrcodeScanner) {
                html5QrcodeScanner.clear();
                document.getElementById('stop-scan').disabled = true;
                document.getElementById('start-scan').disabled = false;
            }
            
            // Trouver la machine
            findMachine(decodedText);
        }
        
        // Trouver une machine par son numéro de série
        function findMachineBySerial() {
            const serialNumber = document.getElementById('manual-serial-number').value;
            if (!serialNumber) return;
            
            findMachine(serialNumber);
        }
        
        function findMachine(serialNumber) {
            const machines = getMachines();
            const machine = machines.find(m => m.serialNumber === serialNumber);
            
            if (machine) {
                showMachineView(machine);
            } else {
                showAlert('Machine non trouvée', 'danger');
            }
        }
        
        // Helper: Obtenir toutes les machines
        function getMachines() {
            return JSON.parse(localStorage.getItem('machines')) || [];
        }
        
        // Helper: Sauvegarder les machines
        function saveMachines(machines) {
            localStorage.setItem('machines', JSON.stringify(machines));
        }
        
        // Helper: Afficher une alerte
        function showAlert(message, type) {
            const alertPlaceholder = document.getElementById('alert-placeholder');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            alertPlaceholder.appendChild(alert);
            
            // Supprimer l'alerte après 5 secondes
            setTimeout(() => {
                alert.remove();
            }, 5000);
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
